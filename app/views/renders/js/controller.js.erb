var Controller = {
  init: function () {
    View.set_initial_layout();
    Controller.activate_dom_interaction();
  },

  activate_dom_interaction: function () {
    $('html').on('click', '#open_bugs', function(){
      View.open_bugs_index();
    });

    $('html').on('click', '#open_tasks', function(){
      View.open_tasks_index();
    });

    $('html').on('click', '#tuggler_back_to_tabs', function(){
      View.set_initial_layout();
    });

    $('html').on('click', '.open_indi_bug_or_task', function(){
      var data = $(this).data();
      View.open_indi_bug_or_task(data);
    });

    $('html').on('click', '#tuggler_back_btn', function(){
      var location = Model.current_location;
      if (location == 'bug') {
        View.open_bugs_index();
      } else if (location == "task") {
        View.open_tasks_index();
      };
    });

    $('html').on('click', '#tuggler_new_Bug', function(){
      View.open_new_bug();
    });

    $('html').on('click', '#tuggler_new_Task', function(){
      View.open_new_task();
    });

    $('html').on('click', '#tuggler_submit_new_bug', function(){
      var description = $('#tuggler_input_description').val();
      var title = $('#tuggler_input_title').val();
      var user_id = Model.user_id();
      var project_id = Model.project_id();
      var route = Model.page_route();
      var params = {
        bug: {
          description: description,
          title: title
        },
        screenshot: Model.global_pic,
        user_id: user_id,
        project_id: project_id,
        route: route
      }
      Controller.get_api("/bug/create", params, View.refresh_bug_index)
    });

    $('html').on('click', '#tuggler_submit_new_task', function(){
      var description = $('#tuggler_input_description').val();
      var title = $('#tuggler_input_title').val();
      var user_id = Model.user_id();
      var project_id = Model.project_id();
      var route = Model.page_route();
      var params = {
        task: {
          description: description,
          title: title
        },
        screenshot: Model.global_pic,
        user_id: user_id,
        project_id: project_id,
        route: route
      }
      Controller.get_api("/tasks/create", params, View.refresh_task_index)
    });

    $('html').on('click', '#tuggler_take_screenshot', function(e){
      e.preventDefault();
      Controller.take_screenshot();
    });

    $('html').on('click', '.save_screenshot', function(e){
      Controller.save_screenshot();
    });
  },

  save_screenshot: function () {
    Controller.combine_canvases();
    $.fancybox.close();
    View.tuggler_container().show();
    // 'pic' becomes a global variable. fuck it. 
    Model.global_pic = combinedCanvases.toDataURL('img/png');
    View.display_just_taken_screenshot();
  },

  take_screenshot: function () {
    View.tuggler_container().hide();

    View.insert_screenshot_container();

    html2canvas(document.body, {
      onrendered: function(canvas) {
        var screenShotCanvas = canvas;
        screenShotCanvas.id = 'screenShotCanvas';
        Controller.display_screenshot(screenShotCanvas);
      }
    });
  },

  display_screenshot: function (screenShotCanvas) {
    $('#screenshot_container').html(screenShotCanvas);
    Controller.load_drawing_canvas();
    $('#screenshot_container').append('<div class="save_screenshot button_1"><img src="'+Model.api_base+'/assets/tuggler-check.png"></div>')
    $.fancybox({
        href: '#screenshot_container'
    });
  },

  get_api: function (route, params, callback) {
    $.ajax({
      type: "POST",
      url: Model.api_base + route,
      async: false,
      data: params,
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
        Model.initial_page_data = json;
        callback();
      },
      error: function(e) {
        alert('something went wrong')
      }
    });
  },

  load_drawing_canvas: function () {
    var screenShotCanvas = $('#screenShotCanvas');
    var drawingCanvas = document.createElement('canvas');
    drawingCanvas.id = 'drawingCanvas';
    drawingCanvas.class = 'drawing_canvas';
    drawingCanvas.width = screenShotCanvas.attr('width');
    drawingCanvas.height = screenShotCanvas.attr('height');
    console.log(drawingCanvas);
    $('#screenshot_container').append(drawingCanvas);
    drawingCanvas = new fabric.Canvas(drawingCanvas);
    drawingCanvas.isDrawingMode = true;
    drawingCanvas.freeDrawingBrush.color = "#f4a100"
    drawingCanvas.freeDrawingBrush.width = 10;
    window_height = window.height
    // place back to isDrawingMode = false when done with drawing
  },

  combine_canvases: function () {
    combinedCanvases = document.createElement('canvas');
    combinedCanvases.id = 'combinedCanvases';
    combinedCanvases.style.display = 'none';

    var screenShotCanvas = document.getElementById('screenShotCanvas');
    var drawingCanvas = document.getElementById('drawingCanvas');
    var canvasWidth = screenShotCanvas.width;
    var canvasHeight = screenShotCanvas.height;

    combinedCanvases.width = canvasWidth;
    combinedCanvases.height = canvasHeight;

    combinedCanvasesContext = combinedCanvases.getContext('2d');
    combinedCanvasesContext.drawImage(screenShotCanvas, 0, 0);
    combinedCanvasesContext.drawImage(drawingCanvas, 0, 0);

    document.body.appendChild(combinedCanvases);
  }
};